name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: "Release packages"
    if: ${{!contains(github.event.head_commit.message, '[ci skip]')}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 16.13.0
          cache: yarn

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-test-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-test

      - name: Install dependencies
        run: yarn

      - name: Create release Pull Request or publish to NPM
        id: changesets
        uses: changesets/action@v1.3.0
        with:
          version: yarn version
          publish: yarn release
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTOMATION }}
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION }}

      - name: Use Node.js to extract version
        run: |
          echo "PACKAGES_JSON='${{steps.changesets.outputs.publishedPackages}}'" >> $GITHUB_ENV
          VERSION=$(node -e "console.log(process.env.PACKAGES_JSON);console.log(JSON.parse(process.env.PACKAGES_JSON)['@lunt/react'].version)")
          echo "version=$VERSION" >> $GITHUB_ENV
      - name: Display version
        run: echo "Version of @lunt/react is ${{ env.version }}"
